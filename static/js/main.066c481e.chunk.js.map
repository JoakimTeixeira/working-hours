{"version":3,"sources":["contexts/TimeContext.jsx","components/Input.jsx","components/Button.jsx","components/Result/Card.jsx","components/Result/Result.jsx","components/AlertMessage.jsx","App.jsx","index.jsx"],"names":["TimeContext","createContext","TimeContextProvider","children","useState","inputT1","inputT2","time","setTime","t1","t2","convertedTime","setConvertedTime","diurnal","nocturnal","rawResult","setRawResult","convertedResult","setConvertedResult","isError","setIsError","Provider","value","resetTimeInputs","resetConvertedTime","resetRawResult","clearError","Input","inputName","inputLabel","useContext","className","style","display","alignItems","htmlFor","marginLeft","padding","color","fontSize","type","name","id","border","height","onChange","e","target","handleInput","Button","convertTimeToMinutes","a","Axios","post","headers","timeInMinutes","data","response","msg","error","onClick","width","Card","cardName","borderBottom","marginTop","justifyContent","fontWeight","Result","useEffect","calculateTime","calculatedTime","convertResultFromMinutes","AlertMessage","defaultProps","undefined","role","tabIndex","onKeyPress","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.066c481e.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TimeContext = createContext();\n\nexport const TimeContextProvider = ({ children }) => {\n  TimeContextProvider.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n\n  const [time, setTime] = useState({\n    inputT1: '',\n    inputT2: '',\n  });\n\n  const resetTimeInputs = () => {\n    setTime({\n      inputT1: '',\n      inputT2: '',\n    });\n  };\n\n  const [convertedTime, setConvertedTime] = useState({\n    t1: '',\n    t2: '',\n  });\n\n  const resetConvertedTime = () => {\n    setConvertedTime({\n      t1: '',\n      t2: '',\n    });\n  };\n\n  const [rawResult, setRawResult] = useState({\n    diurnal: 0,\n    nocturnal: 0,\n  });\n\n  const resetRawResult = () => {\n    setRawResult({\n      diurnal: 0,\n      nocturnal: 0,\n    });\n  };\n\n  const [convertedResult, setConvertedResult] = useState({\n    diurnal: 0,\n    nocturnal: 0,\n  });\n\n  const [isError, setIsError] = useState('');\n\n  const clearError = () => {\n    setIsError('');\n  };\n\n  return (\n    <TimeContext.Provider\n      value={{\n        time,\n        setTime,\n        resetTimeInputs,\n        convertedTime,\n        setConvertedTime,\n        resetConvertedTime,\n        rawResult,\n        setRawResult,\n        resetRawResult,\n        convertedResult,\n        setConvertedResult,\n        isError,\n        setIsError,\n        clearError,\n      }}\n    >\n      {children}\n    </TimeContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { TimeContext } from 'contexts/TimeContext';\n\nconst Input = ({ inputName, inputLabel }) => {\n  Input.propTypes = {\n    inputName: PropTypes.string.isRequired,\n    inputLabel: PropTypes.string.isRequired,\n  };\n\n  const { time, setTime } = useContext(TimeContext);\n\n  const handleInput = (e) => {\n    if (inputName === 't1') setTime({ ...time, inputT1: e.target.value });\n    if (inputName === 't2') setTime({ ...time, inputT2: e.target.value });\n  };\n\n  const handleInputValue = () => {\n    if (inputName === 't1') return time.inputT1;\n    if (inputName === 't2') return time.inputT2;\n    return '';\n  };\n\n  return (\n    <article className=\"row label-container\" style={{ display: 'flex', alignItems: 'center' }}>\n      <label htmlFor={inputName} className=\"col s4\" style={{ marginLeft: '0', padding: '0' }}>\n        <span style={{ color: '#000', fontSize: '1.5rem' }}>{inputLabel}</span>\n      </label>\n      <input\n        type=\"time\"\n        name={inputName}\n        id={inputName}\n        className=\"col s5\"\n        style={{ border: '1px solid black', padding: '.3rem', height: '100%' }}\n        value={handleInputValue()}\n        onChange={(e) => handleInput(e, inputName)}\n      />\n    </article>\n  );\n};\n\nexport default Input;\n","import React, { useContext } from 'react';\nimport Axios from 'axios';\nimport { TimeContext } from 'contexts/TimeContext';\n\nconst Button = () => {\n  const { time, resetTimeInputs, setConvertedTime, setIsError } = useContext(TimeContext);\n\n  const convertTimeToMinutes = async () => {\n    try {\n      const { inputT1, inputT2 } = time;\n\n      const apiUri = 'https://working-hours-api.herokuapp.com/convert/toMinutes';\n\n      const timeInMinutes = await Axios.post(\n        apiUri,\n        { t1: inputT1, t2: inputT2 },\n        {\n          headers: { 'Content-Type': 'application/json' },\n        }\n      );\n      setConvertedTime(timeInMinutes.data);\n      resetTimeInputs();\n    } catch (error) {\n      if (error.response.data.msg) {\n        setIsError(error.response.data.msg);\n      } else {\n        setIsError(error.response.data.error);\n      }\n    }\n  };\n\n  return (\n    <button\n      className=\"btn-large waves-effect waves-light\"\n      type=\"submit\"\n      name=\"action\"\n      onClick={convertTimeToMinutes}\n      style={{ width: '100%' }}\n    >\n      CALCULATE\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ cardName, data }) => {\n  Card.propTypes = {\n    cardName: PropTypes.string.isRequired,\n    data: PropTypes.string.isRequired,\n  };\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        borderBottom: '3px solid #2BBBAD',\n        marginTop: '3rem',\n        fontSize: '1.2rem',\n        display: 'flex',\n        justifyContent: 'space-between',\n      }}\n    >\n      <span style={{ fontWeight: 'bold' }}>{`${cardName}:`}</span>\n      {`${data} h`}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useContext, useEffect } from 'react';\nimport { TimeContext } from 'contexts/TimeContext';\nimport Axios from 'axios';\nimport Card from './Card';\n\nconst Result = () => {\n  const {\n    convertedTime,\n    resetConvertedTime,\n    rawResult,\n    setRawResult,\n    resetRawResult,\n    convertedResult,\n    setConvertedResult,\n    setIsError,\n  } = useContext(TimeContext);\n\n  useEffect(() => {\n    const calculateTime = async () => {\n      try {\n        const { t1, t2 } = convertedTime;\n        const apiUri = 'https://working-hours-api.herokuapp.com/calculate';\n\n        const response = await Axios.post(\n          apiUri,\n          { t1, t2 },\n          {\n            headers: { 'Content-Type': 'application/json' },\n          }\n        );\n        const calculatedTime = response.data;\n\n        setRawResult({ ...rawResult, ...calculatedTime });\n        resetConvertedTime();\n      } catch (error) {\n        if (error.response.data.msg) {\n          setIsError(error.response.data.msg);\n        } else {\n          setIsError(error.response.data.error);\n        }\n      }\n    };\n\n    if (convertedTime.t1 && convertedTime.t2) {\n      calculateTime();\n    }\n  }, [convertedTime]);\n\n  useEffect(() => {\n    const { diurnal, nocturnal } = rawResult;\n\n    const convertResultFromMinutes = async () => {\n      try {\n        const apiUri = 'https://working-hours-api.herokuapp.com/convert/fromMinutes';\n\n        const response = await Axios.post(\n          apiUri,\n          { diurnal, nocturnal },\n          {\n            headers: { 'Content-Type': 'application/json' },\n          }\n        );\n        setConvertedResult(response.data);\n      } catch (error) {\n        if (error.response.data.msg) {\n          setIsError(error.response.data.msg);\n        } else {\n          setIsError(error.response.data.error);\n        }\n      }\n    };\n\n    if ((diurnal && diurnal !== 0) || (nocturnal && nocturnal !== 0)) {\n      convertResultFromMinutes();\n      resetRawResult();\n    }\n  }, [rawResult]);\n\n  const verifyResult = () => {\n    return (\n      (convertedResult.diurnal && convertedResult !== 0) ||\n      convertedResult.nocturnal ||\n      convertedResult.nocturnal !== 0\n    );\n  };\n\n  return (\n    verifyResult() && (\n      <>\n        {convertedResult.diurnal !== '00:00' && (\n          <Card cardName=\"Diurnal\" data={convertedResult.diurnal} />\n        )}\n        {convertedResult.nocturnal !== '00:00' && (\n          <Card cardName=\"Nocturnal\" data={convertedResult.nocturnal} />\n        )}\n      </>\n    )\n  );\n};\n\nexport default Result;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AlertMessage = ({ isError, clearError }) => {\n  AlertMessage.propTypes = {\n    isError: PropTypes.oneOfType([() => undefined, PropTypes.string]),\n    clearError: PropTypes.func.isRequired,\n  };\n\n  AlertMessage.defaultProps = {\n    isError: undefined,\n  };\n\n  return (\n    <div className=\"chip\">\n      {isError}\n      <i\n        className=\"close material-icons\"\n        role=\"button\"\n        tabIndex=\"0\"\n        onClick={clearError}\n        onKeyPress={clearError}\n      >\n        close\n      </i>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport Input from 'components/Input';\nimport Button from 'components/Button';\nimport Result from 'components/Result';\nimport { TimeContext } from 'contexts/TimeContext';\nimport { AlertMessage } from 'components/AlertMessage';\nimport './App.css';\n\nfunction App() {\n  const { isError, clearError } = useContext(TimeContext);\n\n  return (\n    <>\n      <main className=\"container\">\n        <section>\n          <h1>Working hours</h1>\n\n          {isError && <AlertMessage isError={isError} clearError={clearError} />}\n          <div style={{ padding: '1.5rem 0 1rem 0' }}>\n            <Input inputName=\"t1\" inputLabel=\"START: \" />\n            <Input inputName=\"t2\" inputLabel=\"END: \" />\n          </div>\n          <Button />\n        </section>\n        <section>\n          <Result />\n        </section>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TimeContextProvider } from 'contexts/TimeContext';\nimport App from './App';\nimport '../node_modules/materialize-css/dist/css/materialize.min.css';\nimport '../node_modules/materialize-css/dist/js/materialize.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TimeContextProvider>\n      <App />\n    </TimeContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}